{"ast":null,"code":"var _jsxFileName = \"D:\\\\factory\\\\sts_4181\\\\react-A-Z\\\\react-a_z\\\\react-nexflix-end\\\\src\\\\components\\\\Banner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../api/axios';\nimport requests from '../api/requests';\nimport './Banner.css';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Banner() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const [isClicked, setIsClicked] = useState(false);\n  const fetchData = async () => {\n    // 현재 상영중인 영화 정보를 가져오기(여러 영화)\n    const request = await axios.get(requests.fetchNowPlaying);\n\n    // 여러 영화 중 영화 하나의 ID를 가져오기\n    const movieId = request.data.results[Math.floor(Math.random() * request.data.results.length)].id;\n\n    // 특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\n    const {\n      data: movieDetail\n    } = await axios.get(`movie/${movieId}`, {\n      params: {\n        append_to_response: 'videos'\n      }\n    });\n    setMovie(movieDetail);\n  };\n  const truncate = (str, n) => {\n    return (str === null || str === void 0 ? void 0 : str.length) > n ? str.substr(0, n - 1) + \"...\" : str;\n  };\n  if (!isClicked) {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"banner\",\n      style: {\n        backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie.backdrop_path}')`,\n        backgroundPosition: \"top center\",\n        backgroundSize: \"cover\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner__contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner__title\",\n          children: movie.title || movie.name || movie.originael_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banner__buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button play\",\n            onClick: () => setIsClicked(true),\n            children: \"\\uC7AC\\uC0DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button info\",\n            children: \"\\uB354\\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner__description\",\n          children: truncate(movie.overview, 100)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner--fadeBottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(HomeContainer, {\n        children: /*#__PURE__*/_jsxDEV(Iframe, {\n          width: \"640\",\n          height: \"360\",\n          src: `https://www.youtube.com/embed/${movie.videos.results[0].key}?controls=0&autoplay=1&loop=1`,\n          frameborder: \"0\",\n          allow: \"autoplay; fullscreen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Banner, \"0H5q2FFJoyRTXbYm0cXJP1TOrMk=\");\n_c = Banner;\nconst Iframe = styled.iframe`\n  width: 100%;\n  hegiht: 100%;\n  z-index: -1;\n  opacity: 0.65;\n  border: none;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n`;\n_c2 = Iframe;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n`;\n_c3 = Container;\nconst HomeContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n_c4 = HomeContainer;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Banner\");\n$RefreshReg$(_c2, \"Iframe\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"HomeContainer\");","map":{"version":3,"names":["React","useEffect","useState","axios","requests","styled","jsxDEV","_jsxDEV","Banner","_s","movie","setMovie","fetchData","isClicked","setIsClicked","request","get","fetchNowPlaying","movieId","data","results","Math","floor","random","length","id","movieDetail","params","append_to_response","truncate","str","n","substr","className","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","children","title","name","originael_name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","overview","Container","HomeContainer","Iframe","width","height","src","videos","key","frameborder","allow","_c","iframe","_c2","div","_c3","_c4","$RefreshReg$"],"sources":["D:/factory/sts_4181/react-A-Z/react-a_z/react-nexflix-end/src/components/Banner.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from '../api/axios';\r\nimport requests from '../api/requests';\r\nimport './Banner.css'\r\nimport styled from 'styled-components';\r\n\r\nexport default function Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n  useEffect(() => {\r\n    fetchData();\r\n  },[]);\r\n\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  const fetchData = async () => {\r\n    // 현재 상영중인 영화 정보를 가져오기(여러 영화)\r\n    const request = await axios.get(requests.fetchNowPlaying);\r\n\r\n    // 여러 영화 중 영화 하나의 ID를 가져오기\r\n    const movieId = request.data.results[\r\n      Math.floor(Math.random() * request.data.results.length)\r\n    ].id;\r\n\r\n    // 특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\r\n    const { data: movieDetail } = await axios.get(`movie/${movieId}`, {\r\n      params: {append_to_response: 'videos'},\r\n    });\r\n    setMovie(movieDetail);\r\n  };\r\n\r\n  const truncate = (str, n) => {\r\n    return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n  }\r\n  \r\n  if(!isClicked) {\r\n    return (\r\n      <header \r\n        className='banner'\r\n        style={{\r\n          backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie.backdrop_path}')`,\r\n          backgroundPosition: \"top center\",\r\n          backgroundSize: \"cover\",\r\n        }}\r\n      >\r\n      <div className='banner__contents'>\r\n        <h1 className='banner__title'>\r\n          {movie.title || movie.name || movie.originael_name}\r\n        </h1>\r\n  \r\n        <div className='banner__buttons'>\r\n          <button className='banner__button play' onClick={() => setIsClicked(true)}>재생</button>\r\n          <button className='banner__button info'>더보기</button>\r\n        </div>\r\n  \r\n        <h1 className='banner__description'>{truncate(movie.overview, 100)}</h1>\r\n      </div>\r\n      <div className='banner--fadeBottom'></div>\r\n      </header>\r\n    );\r\n  } else {\r\n    return(\r\n      <Container>\r\n        <HomeContainer>\r\n          <Iframe \r\n            width=\"640\" \r\n            height=\"360\" \r\n            src={`https://www.youtube.com/embed/${movie.videos.results[0].key}?controls=0&autoplay=1&loop=1`}\r\n            frameborder=\"0\" \r\n            allow=\"autoplay; fullscreen\"\r\n          ></Iframe>\r\n        </HomeContainer>\r\n        \r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst Iframe = styled.iframe`\r\n  width: 100%;\r\n  hegiht: 100%;\r\n  z-index: -1;\r\n  opacity: 0.65;\r\n  border: none;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst HomeContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}