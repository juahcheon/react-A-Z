{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'../api/axios';import requests from'../api/requests';import'./Banner.css';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Banner(){const[movie,setMovie]=useState([]);const[isClicked,setIsClicked]=useState(false);useEffect(()=>{fetchData();},[]);const fetchData=async()=>{// 현재 상영중인 영화 정보를 가져오기(여러 영화)\nconst request=await axios.get(requests.fetchNowPlaying);// 여러 영화 중 영화 하나의 ID를 가져오기\nconst movieId=request.data.results[Math.floor(Math.random()*request.data.results.length)].id;// 특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\nconst{data:movieDetail}=await axios.get(`movie/${movieId}`,{params:{append_to_response:'videos'}});setMovie(movieDetail);};const truncate=(str,n)=>{return(str===null||str===void 0?void 0:str.length)>n?str.substr(0,n-1)+\"...\":str;};if(!isClicked){return/*#__PURE__*/_jsxs(\"header\",{className:\"banner\",style:{backgroundImage:`url('https://image.tmdb.org/t/p/original/${movie.backdrop_path}')`,backgroundPosition:\"top center\",backgroundSize:\"cover\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"banner__contents\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"banner__title\",children:movie.title||movie.name||movie.originael_name}),/*#__PURE__*/_jsxs(\"div\",{className:\"banner__buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"banner__button play\",onClick:()=>setIsClicked(true),children:\"\\uC7AC\\uC0DD\"}),/*#__PURE__*/_jsx(\"button\",{className:\"banner__button info\",children:\"\\uB354\\uBCF4\\uAE30\"})]}),/*#__PURE__*/_jsx(\"h1\",{className:\"banner__description\",children:truncate(movie.overview,100)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"banner--fadeBottom\"})]});}else{return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(HomeContainer,{children:/*#__PURE__*/_jsx(Iframe,{width:\"640\",height:\"360\",src:`https://www.youtube.com/embed/${movie.videos.results[0].key}?controls=0&autoplay=1&loop=1&mute=1&playlist=${movie.videos.results[0].key}`,frameborder:\"0\",allow:\"autoplay; fullscreen\"})})});}}const Iframe=styled.iframe`\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  opacity: 0.65;\n  border: none;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n`;const Container=styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n`;const HomeContainer=styled.div`\n  width: 100%;\n  height: 100%;\n`;","map":{"version":3,"names":["React","useEffect","useState","axios","requests","styled","jsx","_jsx","jsxs","_jsxs","Banner","movie","setMovie","isClicked","setIsClicked","fetchData","request","get","fetchNowPlaying","movieId","data","results","Math","floor","random","length","id","movieDetail","params","append_to_response","truncate","str","n","substr","className","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","children","title","name","originael_name","onClick","overview","Container","HomeContainer","Iframe","width","height","src","videos","key","frameborder","allow","iframe","div"],"sources":["D:/factory/sts_4181/react-A-Z/react-a_z/react-nexflix-end/src/components/Banner.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from '../api/axios';\r\nimport requests from '../api/requests';\r\nimport './Banner.css'\r\nimport styled from 'styled-components';\r\n\r\nexport default function Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  },[]);\r\n\r\n  const fetchData = async () => {\r\n    // 현재 상영중인 영화 정보를 가져오기(여러 영화)\r\n    const request = await axios.get(requests.fetchNowPlaying);\r\n\r\n    // 여러 영화 중 영화 하나의 ID를 가져오기\r\n    const movieId = request.data.results[\r\n      Math.floor(Math.random() * request.data.results.length)\r\n    ].id;\r\n\r\n    // 특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\r\n    const { data: movieDetail } = await axios.get(`movie/${movieId}`, {\r\n      params: {append_to_response: 'videos'},\r\n    });\r\n    setMovie(movieDetail);\r\n  };\r\n\r\n  const truncate = (str, n) => {\r\n    return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n  }\r\n  \r\n  if(!isClicked) {\r\n    return (\r\n      <header \r\n        className='banner'\r\n        style={{\r\n          backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie.backdrop_path}')`,\r\n          backgroundPosition: \"top center\",\r\n          backgroundSize: \"cover\",\r\n        }}\r\n      >\r\n      <div className='banner__contents'>\r\n        <h1 className='banner__title'>\r\n          {movie.title || movie.name || movie.originael_name}\r\n        </h1>\r\n  \r\n        <div className='banner__buttons'>\r\n          <button className='banner__button play' onClick={() => setIsClicked(true)}>재생</button>\r\n          <button className='banner__button info'>더보기</button>\r\n        </div>\r\n  \r\n        <h1 className='banner__description'>{truncate(movie.overview, 100)}</h1>\r\n      </div>\r\n      <div className='banner--fadeBottom'></div>\r\n      </header>\r\n    );\r\n  } else {\r\n    return(\r\n      <Container>\r\n        <HomeContainer>\r\n          <Iframe \r\n            width=\"640\" \r\n            height=\"360\" \r\n            src={`https://www.youtube.com/embed/${movie.videos.results[0].key}?controls=0&autoplay=1&loop=1&mute=1&playlist=${movie.videos.results[0].key}`}\r\n            frameborder=\"0\" \r\n            allow=\"autoplay; fullscreen\"\r\n          ></Iframe>\r\n        </HomeContainer>\r\n        \r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst Iframe = styled.iframe`\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: -1;\r\n  opacity: 0.65;\r\n  border: none;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst HomeContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}