{"ast":null,"code":"var _jsxFileName = \"D:\\\\factory\\\\sts_4181\\\\react-A-Z\\\\react-a_z\\\\react-todo-app\\\\src\\\\components\\\\Lists.js\";\nimport React from 'react';\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lists(_ref) {\n  let {\n    todoData,\n    setTodoData\n  } = _ref;\n\n  const handleClick = id => {\n    let newTodoData = todoData.filter(data => data.id !== id);\n    setTodoData(newTodoData);\n  };\n\n  const handleCompleteChange = id => {\n    let newTodoData = todoData.map(data => {\n      if (data.id === id) {\n        data.completed = !data.completed;\n      }\n\n      return data;\n    });\n    setTodoData(newTodoData);\n  };\n\n  const handleEnd = result => {\n    if (!result.destination) return;\n    const newTodoData = [...todoData]; // 1. 변경시키는 아이템을 배열에서 지워줍니다.\n    // 2. return 값으로 지워진 아이템을 잡아줍니다.\n\n    const [reorderedItem] = newTodoData.splice(result.source.index, 1); // 원하는 자리에 reorderItem 을 insert 해줍니다.\n\n    newTodoData.splice(result.destination.index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"todo\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [todoData.map((data, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: data.id.toString(),\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${snapshot.isDragging ? \"bg-gray-400\" : \"bg-gray-100\"} flex items-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`,\n              ...provided.draggableProps,\n              ref: provided.innerRef,\n              ...provided.dragHandleProps,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  defaultChecked: data.completed,\n                  onChange: () => handleCompleteChange(data.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 25\n                }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: data.completed ? \"line-through\" : undefined,\n                  children: data.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-4 py-2 float-right\",\n                  onClick: () => handleClick(data.id),\n                  children: \"X\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 23\n              }, this)]\n            }, data.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["React","DragDropContext","Draggable","Droppable","Lists","todoData","setTodoData","handleClick","id","newTodoData","filter","data","handleCompleteChange","map","completed","handleEnd","result","destination","reorderedItem","splice","source","index","provided","droppableProps","innerRef","toString","snapshot","isDragging","draggableProps","dragHandleProps","undefined","title","placeholder"],"sources":["D:/factory/sts_4181/react-A-Z/react-a_z/react-todo-app/src/components/Lists.js"],"sourcesContent":["import React from 'react';\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\n\r\nexport default function Lists({ todoData, setTodoData }) {\r\n\r\n  const handleClick = (id) => {\r\n    let newTodoData = todoData.filter(data => data.id !== id)\r\n    setTodoData(newTodoData);\r\n  }\r\n\r\n  const handleCompleteChange = (id) => {\r\n    let newTodoData = todoData.map((data) => {\r\n      if(data.id === id) {\r\n        data.completed = !data.completed;\r\n      }\r\n      return data;\r\n    });\r\n\r\n    setTodoData(newTodoData);\r\n  };\r\n\r\n  const handleEnd = (result) => {\r\n    if (!result.destination) return;\r\n    const newTodoData = [...todoData];\r\n    \r\n    // 1. 변경시키는 아이템을 배열에서 지워줍니다.\r\n\r\n    // 2. return 값으로 지워진 아이템을 잡아줍니다.\r\n    const [reorderedItem] = newTodoData.splice(result.source.index, 1);\r\n\r\n    // 원하는 자리에 reorderItem 을 insert 해줍니다.\r\n    newTodoData.splice(result.destination.index)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DragDropContext onDragEnd={handleEnd}>\r\n        <Droppable droppableId=\"todo\">\r\n          {(provided) => (\r\n            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n              {todoData.map((data, index) => (\r\n                <Draggable\r\n                  key={data.id}\r\n                  draggableId={data.id.toString()}\r\n                  index={index}\r\n                >\r\n                  {(provided, snapshot) => (\r\n                    <div \r\n                      className={`${snapshot.isDragging ? \"bg-gray-400\" : \"bg-gray-100\"} flex items-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`}\r\n                      key={data.id} {...provided.draggableProps} \r\n                      ref={provided.innerRef} {...provided.dragHandleProps}>\r\n                      <div className='items-center'>\r\n                        <input \r\n                          type=\"checkbox\" \r\n                          defaultChecked={data.completed} \r\n                          onChange={() => handleCompleteChange(data.id)} /> {\" \"}\r\n                        <span className={ data.completed ? \"line-through\" : undefined }>{data.title}</span>\r\n                      </div>\r\n                      <div>\r\n                        <button className='px-4 py-2 float-right' onClick={() => handleClick(data.id)}>X</button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}