{"ast":null,"code":"var _jsxFileName = \"D:\\\\factory\\\\sts_4181\\\\react-A-Z\\\\react-a_z\\\\react-todo-app\\\\src\\\\components\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(_ref => {\n  _s();\n\n  let {\n    id,\n    title,\n    completed,\n    todoData,\n    setTodoData,\n    provided,\n    snapshot,\n    handleClick\n  } = _ref;\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTitle, setEditedTitle] = useState(title);\n\n  const handleCompleteChange = id => {\n    let newTodoData = todoData.map(data => {\n      if (id === id) {\n        completed = !completed;\n      }\n\n      return data;\n    });\n    setTodoData(newTodoData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${snapshot.isDragging ? \"bg-gray-400\" : \"bg-gray-100\"} flex items-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`,\n    ...provided.draggableProps,\n    ref: provided.innerRef,\n    ...provided.dragHandleProps,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: completed,\n        onChange: () => handleCompleteChange(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: completed ? \"line-through\" : undefined,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2 float-right\",\n        onClick: () => handleClick(id),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2 float-right\",\n        onClick: () => setIsEditing(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}, \"pY7cAWcclBiOYPvDi6/pXXlB2c0=\")), \"pY7cAWcclBiOYPvDi6/pXXlB2c0=\");\n\n_c2 = List;\nexport default List;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"List$React.memo\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"names":["React","useState","List","memo","id","title","completed","todoData","setTodoData","provided","snapshot","handleClick","isEditing","setIsEditing","editedTitle","setEditedTitle","handleCompleteChange","newTodoData","map","data","isDragging","draggableProps","innerRef","dragHandleProps","undefined"],"sources":["D:/factory/sts_4181/react-A-Z/react-a_z/react-todo-app/src/components/List.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst List = React.memo(({\n  id, title, completed, todoData, setTodoData, provided, snapshot, handleClick\n}) => {\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTitle, setEditedTitle] = useState(title);\n\n  const handleCompleteChange = (id) => {\n    let newTodoData = todoData.map((data) => {\n      if(id === id) {\n        completed = !completed;\n      }\n      return data;\n    });\n\n    setTodoData(newTodoData);\n  };\n\n  return (\n    <div \n      className={`${snapshot.isDragging ? \"bg-gray-400\" : \"bg-gray-100\"} flex items-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`}\n      key={id} {...provided.draggableProps} \n      ref={provided.innerRef} {...provided.dragHandleProps}>\n      <div className='items-center'>\n        <input \n          type=\"checkbox\" \n          defaultChecked={completed} \n          onChange={() => handleCompleteChange(id)} /> {\" \"}\n        <span className={ completed ? \"line-through\" : undefined }>{title}</span>\n      </div>\n      <div>\n        <button \n          className='px-4 py-2 float-right' \n          onClick={() => handleClick(id)}>X\n        </button>\n        <button \n          className='px-4 py-2 float-right' \n          onClick={() => setIsEditing(true)}></button>\n      </div>\n    </div>\n  )\n});\n\nexport default List"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,IAAI,iCAAGF,KAAK,CAACG,IAAN,SAAW,QAElB;EAAA;;EAAA,IAFmB;IACvBC,EADuB;IACnBC,KADmB;IACZC,SADY;IACDC,QADC;IACSC,WADT;IACsBC,QADtB;IACgCC,QADhC;IAC0CC;EAD1C,CAEnB;EAEJ,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAACI,KAAD,CAA9C;;EAEA,MAAMW,oBAAoB,GAAIZ,EAAD,IAAQ;IACnC,IAAIa,WAAW,GAAGV,QAAQ,CAACW,GAAT,CAAcC,IAAD,IAAU;MACvC,IAAGf,EAAE,KAAKA,EAAV,EAAc;QACZE,SAAS,GAAG,CAACA,SAAb;MACD;;MACD,OAAOa,IAAP;IACD,CALiB,CAAlB;IAOAX,WAAW,CAACS,WAAD,CAAX;EACD,CATD;;EAWA,oBACE;IACE,SAAS,EAAG,GAAEP,QAAQ,CAACU,UAAT,GAAsB,aAAtB,GAAsC,aAAc,mGADpE;IAAA,GAEeX,QAAQ,CAACY,cAFxB;IAGE,GAAG,EAAEZ,QAAQ,CAACa,QAHhB;IAAA,GAG8Bb,QAAQ,CAACc,eAHvC;IAAA,wBAIE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QACE,IAAI,EAAC,UADP;QAEE,cAAc,EAAEjB,SAFlB;QAGE,QAAQ,EAAE,MAAMU,oBAAoB,CAACZ,EAAD;MAHtC;QAAA;QAAA;QAAA;MAAA,QADF,OAIkD,GAJlD,eAKE;QAAM,SAAS,EAAGE,SAAS,GAAG,cAAH,GAAoBkB,SAA/C;QAAA,UAA4DnB;MAA5D;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAWE;MAAA,wBACE;QACE,SAAS,EAAC,uBADZ;QAEE,OAAO,EAAE,MAAMM,WAAW,CAACP,EAAD,CAF5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QACE,SAAS,EAAC,uBADZ;QAEE,OAAO,EAAE,MAAMS,YAAY,CAAC,IAAD;MAF7B;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA,GAEOT,EAFP;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CAzCY,kCAAH,iCAAV;;MAAMF,I;AA2CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}