{"ast":null,"code":"var _jsxFileName = \"D:\\\\factory\\\\sts_4181\\\\react-A-Z\\\\react-a_z\\\\react-nexflix-end\\\\src\\\\components\\\\Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../api/axios';\nimport './Row.css';\nimport MovieModal from './MovieModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row({\n  isLargeRow,\n  title,\n  id,\n  fetchUrl\n}) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [movieSelected, setMovieSelected] = useState({});\n  useEffect(() => {\n    fetchMovieData();\n  }, []);\n  const fetchMovieData = async () => {\n    const request = await axios.get(fetchUrl);\n    console.log(\"request\", request);\n    setMovies(request.data.results);\n  };\n  const handleClick = movie => {\n    setModalOpen(true);\n    setMovieSelected(movie);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: id,\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `https://image.tmdb.org/t/p/original/${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name,\n        onClick: () => handleClick(movie)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(MovieModal, {\n      ...movieSelected,\n      setModalOpen: setModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"ARRKMuuqd4hR7xc6n0m8gpcgRM8=\");\n_c = Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieModal","jsxDEV","_jsxDEV","Row","isLargeRow","title","id","fetchUrl","_s","movies","setMovies","modalOpen","setModalOpen","movieSelected","setMovieSelected","fetchMovieData","request","get","console","log","data","results","handleClick","movie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","poster_path","backdrop_path","alt","name","onClick","_c","$RefreshReg$"],"sources":["D:/factory/sts_4181/react-A-Z/react-a_z/react-nexflix-end/src/components/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from '../api/axios';\r\nimport './Row.css';\r\nimport MovieModal from './MovieModal';\r\n\r\nexport default function Row({ isLargeRow, title, id, fetchUrl }) {\r\n\r\n  const [movies, setMovies] = useState([]);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [movieSelected, setMovieSelected] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchMovieData();\r\n  }, [])\r\n\r\n  const fetchMovieData = async () => {\r\n    const request = await axios.get(fetchUrl);\r\n    console.log(\"request\", request);\r\n    setMovies(request.data.results);\r\n  };\r\n  \r\n  const handleClick = (movie) => {\r\n    setModalOpen(true);\r\n    setMovieSelected(movie);\r\n  };\r\n\r\n  return (\r\n    <section className='row'>\r\n      <h2>{title}</h2>\r\n\r\n      \r\n\r\n        <div id={id} className='row__posters'>\r\n          {movies.map((movie) => (\r\n            <img \r\n              key={movie.id}\r\n              className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n              src={`https://image.tmdb.org/t/p/original/${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n              alt={movie.name}\r\n              onClick={() => handleClick(movie)}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n      { modalOpen && <MovieModal {...movieSelected} setModalOpen={setModalOpen} /> }\r\n\r\n    </section>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,GAAGA,CAAC;EAAEC,UAAU;EAAEC,KAAK;EAAEC,EAAE;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAE/D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACdkB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,OAAO,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAACV,QAAQ,CAAC;IACzCW,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,OAAO,CAAC;IAC/BN,SAAS,CAACM,OAAO,CAACI,IAAI,CAACC,OAAO,CAAC;EACjC,CAAC;EAED,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7BX,YAAY,CAAC,IAAI,CAAC;IAClBE,gBAAgB,CAACS,KAAK,CAAC;EACzB,CAAC;EAED,oBACErB,OAAA;IAASsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACtBvB,OAAA;MAAAuB,QAAA,EAAKpB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAId3B,OAAA;MAAKI,EAAE,EAAEA,EAAG;MAACkB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAClChB,MAAM,CAACqB,GAAG,CAAEP,KAAK,iBAChBrB,OAAA;QAEEsB,SAAS,EAAE,eAAepB,UAAU,IAAI,kBAAkB,EAAG;QAC7D2B,GAAG,EAAE,uCAAuC3B,UAAU,GAAGmB,KAAK,CAACS,WAAW,GAAGT,KAAK,CAACU,aAAa,EAAG;QACnGC,GAAG,EAAEX,KAAK,CAACY,IAAK;QAChBC,OAAO,EAAEA,CAAA,KAAMd,WAAW,CAACC,KAAK;MAAE,GAJ7BA,KAAK,CAACjB,EAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAENlB,SAAS,iBAAIT,OAAA,CAACF,UAAU;MAAA,GAAKa,aAAa;MAAED,YAAY,EAAEA;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErE,CAAC;AAEd;AAACrB,EAAA,CA3CuBL,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}