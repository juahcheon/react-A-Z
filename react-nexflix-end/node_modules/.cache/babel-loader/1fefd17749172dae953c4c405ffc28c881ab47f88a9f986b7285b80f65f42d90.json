{"ast":null,"code":"var _jsxFileName = \"D:\\\\factory\\\\sts_4181\\\\react-A-Z\\\\react-a_z\\\\react-nexflix-end\\\\src\\\\Pages\\\\SearchPage\\\\index.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from '../../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchPage() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [searchResults, setSearchResults] = useState([]);\n  const useQuery = () => {\n    _s();\n    return new URLSearchParams(useLocation().search);\n  };\n  _s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n    return [useLocation];\n  });\n  let query = useQuery();\n  const searchTerm = query.get(\"q\");\n  useEffect(() => {\n    if (searchTerm) {\n      fetchSearchMovie();\n    }\n  }, [searchTerm]);\n  const fetchSearchMovie = async searchTerm => {\n    try {\n      const request = await axios.get(`/search/multi?include_adult=false&query=${searchTerm}`);\n      setSearchResults(request.data.results);\n    } catch (error) {\n      console.log('error: ', error);\n    }\n  };\n  const renderSearchResults = () => {\n    return searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"search-container\",\n      children: searchResults.map(movie => {\n        if (movie.backdrop_path !== null && movie.media_type !== 'person') {\n          const movieImageUrl = 'https://image.tmdb.org/t/p/w500' + movie.backdrop_path;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie__column-poster\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: movieImageUrl,\n                alt: \"movie image\",\n                className: \"movie__poster\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"no-results\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results__text\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uCC3E\\uACE0\\uC790 \\uD558\\uB294\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"index\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s2(SearchPage, \"lsB6FxWFYFLtWP+Q6PcC57+x7wM=\", true);\n_c = SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","axios","jsxDEV","_jsxDEV","SearchPage","_s2","_s","$RefreshSig$","searchResults","setSearchResults","useQuery","URLSearchParams","search","query","searchTerm","get","fetchSearchMovie","request","data","results","error","console","log","renderSearchResults","length","className","children","map","movie","backdrop_path","media_type","movieImageUrl","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/factory/sts_4181/react-A-Z/react-a_z/react-nexflix-end/src/Pages/SearchPage/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport axios from '../../api/axios';\r\n\r\nexport default function SearchPage() {\r\n\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const useQuery = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n  }\r\n\r\n  let query = useQuery();\r\n  const searchTerm = query.get(\"q\");\r\n\r\n  useEffect(() => {\r\n    if(searchTerm) {\r\n      fetchSearchMovie();\r\n    }\r\n  }, [searchTerm]);\r\n  \r\n  const fetchSearchMovie = async (searchTerm) => {\r\n    try {\r\n      const request = await axios.get(\r\n        `/search/multi?include_adult=false&query=${searchTerm}`\r\n      )\r\n      setSearchResults(request.data.results);\r\n    } catch (error) {\r\n      console.log('error: ', error)\r\n    }\r\n  }\r\n\r\n  const renderSearchResults = () => {\r\n    return searchResults.length > 0 ? (\r\n      <section className='search-container'>\r\n        {searchResults.map((movie) => {\r\n          if(movie.backdrop_path !== null && movie.media_type !== 'person') {\r\n            const movieImageUrl = 'https://image.tmdb.org/t/p/w500' + movie.backdrop_path\r\n            return (\r\n              <div className='movie'>\r\n                <div className='movie__column-poster'>\r\n                  <img \r\n                    src={movieImageUrl}\r\n                    alt='movie image'\r\n                    className='movie__poster'\r\n                  />\r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n        })}\r\n      </section>\r\n    ) : (\r\n      <section className='no-results'>\r\n        <div className='no-results__text'>\r\n          <p>\r\n            찾고자 하는 \r\n          </p>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>index</div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}