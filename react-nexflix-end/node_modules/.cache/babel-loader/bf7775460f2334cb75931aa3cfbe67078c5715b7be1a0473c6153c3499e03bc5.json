{"ast":null,"code":"var _jsxFileName = \"D:\\\\factory\\\\sts_4181\\\\react-A-Z\\\\react-a_z\\\\react-nexflix-end\\\\src\\\\components\\\\Banner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../api/axios';\nimport requests from '../api/requests';\nimport './Banner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Banner() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    // 현재 상영중인 영화 정보를 가져오기(여러 영화)\n    const request = await axios.get(requests.fetchNowPlaying);\n\n    // 여러 영화 중 영화 하나의 ID를 가져오기\n    const movieId = request.data.results[Math.floor(Math.random() * request.data.results.length)].id;\n\n    // 특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\n    const {\n      data: movieDetail\n    } = await axios.get(`movie/${movieId}`, {\n      params: {\n        append_to_reponse: 'videos'\n      }\n    });\n    setMovie(movieDetail);\n  };\n  const truncate = (str, n) => {\n    return (str === null || str === void 0 ? void 0 : str.length) > n ? str.substr(0, n - 1) + \"...\" : str;\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"banner\",\n    style: {\n      backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie.backdrop_path}')`,\n      backgroundPosition: \"top center\",\n      backgroundSize: \"cover\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner__contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"banner__title\",\n        children: movie.title || movie.name || movie.originael_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"banner_button play\",\n          children: \"\\uC7AC\\uC0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"banner__button info\",\n          children: \"\\uB354\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"banner__description\",\n        children: truncate(movie.overview, 100)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner--fadeBottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Banner, \"jmRb9xsBKsoKCGHCjtfP3JDQESc=\");\n_c = Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useEffect","useState","axios","requests","jsxDEV","_jsxDEV","Banner","_s","movie","setMovie","fetchData","request","get","fetchNowPlaying","movieId","data","results","Math","floor","random","length","id","movieDetail","params","append_to_reponse","truncate","str","n","substr","className","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","children","title","name","originael_name","fileName","_jsxFileName","lineNumber","columnNumber","overview","_c","$RefreshReg$"],"sources":["D:/factory/sts_4181/react-A-Z/react-a_z/react-nexflix-end/src/components/Banner.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from '../api/axios';\r\nimport requests from '../api/requests';\r\nimport './Banner.css'\r\n\r\nexport default function Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n  useEffect(() => {\r\n    fetchData();\r\n  },[]);\r\n\r\n  const fetchData = async () => {\r\n    // 현재 상영중인 영화 정보를 가져오기(여러 영화)\r\n    const request = await axios.get(requests.fetchNowPlaying);\r\n\r\n    // 여러 영화 중 영화 하나의 ID를 가져오기\r\n    const movieId = request.data.results[\r\n      Math.floor(Math.random() * request.data.results.length)\r\n    ].id;\r\n\r\n    // 특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\r\n    const { data: movieDetail } = await axios.get(`movie/${movieId}`, {\r\n      params: {append_to_reponse: 'videos'},\r\n    });\r\n    setMovie(movieDetail);\r\n  };\r\n\r\n  const truncate = (str, n) => {\r\n    return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n  }\r\n  \r\n\r\n  return (\r\n    <header \r\n      className='banner'\r\n      style={{\r\n        backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie.backdrop_path}')`,\r\n        backgroundPosition: \"top center\",\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n    <div className='banner__contents'>\r\n      <h1 className='banner__title'>\r\n        {movie.title || movie.name || movie.originael_name}\r\n      </h1>\r\n\r\n      <div className='banner__buttons'>\r\n        <button className='banner_button play'>재생</button>\r\n        <button className='banner__button info'>더보기</button>\r\n      </div>\r\n\r\n      <h1 className='banner__description'>{truncate(movie.overview, 100)}</h1>\r\n    </div>\r\n    <div className='banner--fadeBottom'></div>\r\n    </header>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}